🚀 **CURSOR: 병렬 작업 시작 - Evidence Pack 15초 지문 + 헬스체크 강화**

**타임스탬프**: 2025-08-21 17:40 KST
**우선순위**: P0 (병렬 작업 시작)
**상태**: ✅ **시작** - ClaudeCode와 병렬 작업 진행

---

## 🎯 **Cursor 병렬 작업 시작**

### ✅ **승인 완료**
- **ClaudeCode**: T2 yt-dlp 통일 작업 시작
- **Cursor**: Evidence Pack 15초 지문 + 헬스체크 강화 병렬 시작

### ⏱️ **시간 목표**
- **총 목표**: 20분 내 모든 작업 완료
- **Evidence Pack 15초 지문**: 10분
- **헬스체크 강화**: 10분

---

## 🔧 **Phase 2A: Evidence Pack 15초 지문 (10분)**

### **목표**: `fpcalc -length 15` 적용
- **현재 상태**: 기본 오디오 지문 (30초)
- **목표**: 15초 길이 최적화된 오디오 지문
- **성능**: 빠른 오디오 매칭

### **작업 계획**
```bash
# 15초 오디오 지문 생성 스크립트
fpcalc -length 15 input.mp4 > fingerprint.txt

# Evidence Pack 통합
# - 오디오 지문 추가
# - 매칭 알고리즘 최적화
```

---

## 🔧 **Phase 2B: 헬스체크 강화 (10분)**

### **목표**: `/readyz`에서 GCS/Vertex 접근성 검증
- **현재 상태**: 기본 헬스체크
- **목표**: 외부 서비스 접근성 검증
- **안정성**: 종속성 상태 실시간 모니터링

### **작업 계획**
```javascript
// GCS 접근성 검증
const gcsHealth = await storage.bucket(RAW_BUCKET).exists();

// Vertex AI 접근성 검증
const vertexHealth = await vertexAI.models.generateContent({
  model: "gemini-2.0-flash",
  contents: [{role: "user", parts: [{text: "health check"}]}]
});
```

---

## 🚀 **병렬 작업 시작**

### **Phase 2A 시작**: Evidence Pack 15초 지문
- **파일**: `jobs/evidence-generator/audio-fingerprint-enhanced.sh`
- **수정**: `fpcalc -length 15` 적용
- **목표**: 10분 내 완료

### **Phase 2B 시작**: 헬스체크 강화
- **파일**: `simple-web-server.js`
- **수정**: `/readyz` 엔드포인트에 GCS/Vertex 검증 추가
- **목표**: 10분 내 완료

---

## 💬 **ClaudeCode 확인 요청사항**

1. **병렬 작업 시작** - Cursor가 Evidence Pack + 헬스체크 강화 병렬 진행
2. **T2 yt-dlp 통일** - ClaudeCode가 Instagram/TikTok 다운로드 표준화 진행
3. **시간 목표** - 20분 내 모든 작업 완료 목표
4. **통합 테스트** - 모든 작업 완료 후 전체 시스템 검증

**목표**: 20분 내 3개 작업 병렬 완료 (T2 yt-dlp + Evidence Pack + 헬스체크 강화)

---

**GPT-5 Pro CTO 세션**: 병렬 작업 시작 승인
**다음 단계**: 병렬 작업 진행 → 20분 내 완료 → VDP RAW 시스템 최종 완성

🚀 **Cursor 병렬 작업 시작! ClaudeCode와 함께 효율성 극대화!** ⚡
