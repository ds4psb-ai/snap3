openapi: 3.1.0
info:
  title: Snap3 Turbo API
  description: |
    Snap3 Turbo briefs → Veo3 preview → QA Gate → exports E2E API
    
    ## Evidence Pack v2 + Audit System
    
    All export endpoints now include comprehensive audit trails and data redaction:
    
    ### Audit Headers
    - `X-Export-SHA256`: SHA256 hash of exported data for integrity verification
    - `X-Export-Size`: Size of payload in bytes
    - `X-Export-Timestamp`: Export timestamp (ISO 8601)
    - `ETag`: Weak ETag for caching based on content hash
    
    ### Data Redaction
    VDP_FULL sensitive data is automatically redacted before export:
    - Removes: overall_analysis, asr_transcript, ocr_text, product_mentions
    - Masks: view_count, like_count, comment_count  
    - Strips: internal/*, debug/*, temp/*, raw/* paths
    
    ### Caching & ETags
    All exports support conditional requests using ETags for bandwidth optimization.
    
    ### Security
    - All exports are logged with audit trail
    - IP addresses are masked for privacy
    - User agents are sanitized 
    - No VDP_FULL data ever exposed in public APIs
  version: 2.0.0
  contact:
    name: Snap3 Team
    email: support@snap3.com

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.snap3.com
    description: Production server

paths:
  /ingest:
    post:
      summary: Ingest content for processing
      description: Normalize URL/text/upload content and record embed compatibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - content
              properties:
                type:
                  type: string
                  enum: [url, text, upload]
                  description: Type of content to ingest
                content:
                  type: string
                  description: Content to process
                metadata:
                  type: object
                  additionalProperties: true
                  description: Optional metadata
      responses:
        '200':
          description: Content ingested successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  type:
                    type: string
                  status:
                    type: string
                    enum: [normalized]
                  embedCompatibility:
                    type: boolean
        '400':
          description: Invalid ingest data
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /snap3/turbo:
    post:
      summary: Generate turbo briefs
      description: Create 2-4 textboards with evidence pack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ingestId
                - evidencePack
              properties:
                ingestId:
                  type: string
                  format: uuid
                evidencePack:
                  $ref: '#/components/schemas/EvidencePack'
      responses:
        '200':
          description: Turbo briefs generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  textboards:
                    type: array
                    items:
                      $ref: '#/components/schemas/Textboard'
                    minItems: 2
                    maxItems: 4
                  totalDuration:
                    type: number
                    maximum: 8
                  evidencePack:
                    $ref: '#/components/schemas/EvidencePack'
        '400':
          description: Invalid turbo request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /compile/veo3:
    post:
      summary: Compile Veo3 prompt
      description: Validate and compile Veo3 prompt with 8s/16:9 constraints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Veo3Prompt'
      responses:
        '200':
          description: Veo3 prompt compiled
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  prompt:
                    type: string
                  duration:
                    type: number
                    const: 8
                  aspectRatio:
                    type: string
                    const: '16:9'
                  quality:
                    type: string
                    enum: [720p, 1080p]
                  status:
                    type: string
                    enum: [compiled]
        '400':
          description: Invalid Veo3 prompt
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidDurationError'
                  - $ref: '#/components/schemas/UnsupportedAspectRatioError'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Unprocessable Content
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                invalidDuration:
                  value:
                    type: 'https://api.snap3.com/problems/invalid-duration'
                    title: 'Preview duration must be 8 seconds'
                    status: 422
                    code: 'INVALID_DURATION'
                    detail: 'Duration must be exactly 8 seconds, got 10'
                    fix: 'Set duration to exactly 8.0 seconds and re-validate.'
                unsupportedAspectRatio:
                  value:
                    type: 'https://api.snap3.com/problems/unsupported-ar'
                    title: 'Preview aspect ratio not supported'
                    status: 422
                    code: 'UNSUPPORTED_AR_FOR_PREVIEW'
                    detail: 'Requested 9:16 aspect ratio, but preview only supports 16:9'
                    fix: 'Render 16:9; return crop-proxy metadata or switch AR.'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Seconds to wait before retrying
              schema:
                type: integer
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed

  /embed-meta:
    post:
      summary: Extract embed metadata
      description: Validate and extract metadata from official YouTube and Vimeo embed URLs only
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: URL to extract embed metadata from
            examples:
              youtube:
                value:
                  url: "https://www.youtube.com/embed/dQw4w9WgXcQ"
              vimeo:
                value:
                  url: "https://player.vimeo.com/video/123456789"
              youtubeWatch:
                value:
                  url: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
      responses:
        '200':
          description: Embed metadata extracted successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - embedUrl
                  - originalUrl
                  - provider
                  - videoId
                  - title
                  - thumbnail
                properties:
                  embedUrl:
                    type: string
                    format: uri
                    description: Normalized official embed URL
                  originalUrl:
                    type: string
                    format: uri
                    description: Original URL provided
                  provider:
                    type: string
                    enum: [youtube, vimeo]
                    description: Video provider
                  videoId:
                    type: string
                    description: Provider-specific video ID
                  title:
                    type: string
                    description: Generated video title
                  thumbnail:
                    type: string
                    format: uri
                    description: Video thumbnail URL
              examples:
                youtube:
                  value:
                    embedUrl: "https://www.youtube.com/embed/dQw4w9WgXcQ"
                    originalUrl: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                    provider: "youtube"
                    videoId: "dQw4w9WgXcQ"
                    title: "YouTube Video (dQw4w9WgXcQ)"
                    thumbnail: "https://img.youtube.com/vi/dQw4w9WgXcQ/maxresdefault.jpg"
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                invalidUrl:
                  value:
                    type: 'https://api.snap3.com/problems/validation-error'
                    title: 'Validation error'
                    status: 400
                    code: 'VALIDATION_ERROR'
                    detail: 'Validation failed for 1 field(s)'
                    fix: 'Check request format and required fields.'
                    violations:
                      - field: 'url'
                        message: 'Invalid URL format'
                        code: 'VALIDATION_ERROR'
        '403':
          description: Embed Denied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                embedDenied:
                  value:
                    type: 'https://api.snap3.com/problems/embed-denied'
                    title: 'Embed denied'
                    status: 403
                    code: 'EMBED_DENIED'
                    detail: 'Only official YouTube and Vimeo embeds are allowed'
                    fix: 'Use official embeds only; link out if needed.'
        '405':
          description: Method not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /preview/veo:
    post:
      summary: Create preview job
      description: Create async preview job, returns 202 Accepted with Location header
      parameters:
        - name: Idempotency-Key
          in: header
          required: false
          description: Unique key for idempotent requests
          schema:
            type: string
        - name: X-Request-Id
          in: header
          required: false
          description: Request ID for tracking and rate limiting
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - veo3Id
                - prompt
                - duration
                - aspectRatio
                - quality
              properties:
                veo3Id:
                  type: string
                  format: uuid
                  description: ID of the Veo3 compilation
                prompt:
                  type: string
                  minLength: 1
                  maxLength: 1000
                  description: Preview generation prompt
                duration:
                  type: number
                  const: 8
                  description: Preview duration (must be 8 seconds)
                aspectRatio:
                  type: string
                  const: '16:9'
                  description: Aspect ratio (must be 16:9)
                quality:
                  type: string
                  enum: [720p, 1080p]
                  description: Video quality
      responses:
        '202':
          description: Preview job accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: object
                required:
                  - jobId
                  - status
                  - pollUrl
                properties:
                  jobId:
                    type: string
                    format: uuid
                    description: Job ID
                  status:
                    type: string
                    enum: [accepted]
                    description: Job status
                  pollUrl:
                    type: string
                    format: uri
                    description: URL to poll for job status
        '400':
          description: Invalid preview request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Seconds to wait before retrying
              schema:
                type: integer
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed

  /jobs/{id}:
    get:
      summary: Get job status
      description: Poll job status for completion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Veo3Job'
        '404':
          description: Job not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed

  /qa/validate:
    post:
      summary: Validate QA rules
      description: Run QA lint rules (Hook≤3s, Safezones, fps/bitrate)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QAValidationRequest'
      responses:
        '200':
          description: QA validation passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAReport'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: QA validation failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                qaViolation:
                  value:
                    type: 'https://api.snap3.com/problems/qa-violation'
                    title: 'QA validation failed'
                    status: 422
                    code: 'QA_RULE_VIOLATION'
                    detail: 'QA validation failed with 2 violation(s)'
                    fix: 'Fix Hook≤3s, safezones, fps/bitrate; re-run QA.'
                    violations:
                      - field: 'hook'
                        message: 'Hook must be ≤3 seconds'
                        code: 'HOOK_TOO_LONG'
                      - field: 'fps'
                        message: 'FPS must be ≥30'
                        code: 'FPS_TOO_LOW'
        '405':
          description: Method not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /export/brief/{id}:
    get:
      summary: Export brief
      description: Export brief with VDP_MIN + Evidence (VDP_FULL excluded) with audit trail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-Z0-9]{8}$'
          description: Digest ID (8 alphanumeric characters)
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, stream]
            default: json
          description: Response format (json or stream)
        - name: If-None-Match
          in: header
          required: false
          schema:
            type: string
          description: ETag for conditional requests
      responses:
        '200':
          description: Brief exported with audit information
          headers:
            ETag:
              description: Evidence digest ETag for caching
              schema:
                type: string
                pattern: '^W?"[a-f0-9]{16}"$'
            X-Export-SHA256:
              description: SHA256 hash of the exported data
              schema:
                type: string
                pattern: '^[a-f0-9]{64}$'
            X-Export-Size:
              description: Size of exported data in bytes
              schema:
                type: integer
                minimum: 1
            X-Export-Timestamp:
              description: Export timestamp (ISO 8601)
              schema:
                type: string
                format: date-time
            Cache-Control:
              description: Cache control directive
              schema:
                type: string
                enum: ['private, max-age=3600', 'no-cache']
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefExport'
        '304':
          description: Not Modified (ETag match)
          headers:
            ETag:
              description: Evidence digest ETag
              schema:
                type: string
            Cache-Control:
              description: Cache control directive
              schema:
                type: string
        '404':
          description: Brief not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /export/json/{id}:
    get:
      summary: Export JSON
      description: Export JSON with VDP_MIN + Evidence (VDP_FULL excluded) with audit trail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-Z0-9]{8}$'
          description: Digest ID (8 alphanumeric characters)
        - name: If-None-Match
          in: header
          required: false
          schema:
            type: string
          description: ETag for conditional requests
      responses:
        '200':
          description: JSON exported with audit information
          headers:
            ETag:
              description: Evidence digest ETag for caching
              schema:
                type: string
                pattern: '^W?"[a-f0-9]{16}"$'
            X-Export-SHA256:
              description: SHA256 hash of the exported data
              schema:
                type: string
                pattern: '^[a-f0-9]{64}$'
            X-Export-Size:
              description: Size of exported data in bytes
              schema:
                type: integer
                minimum: 1
            X-Export-Timestamp:
              description: Export timestamp (ISO 8601)
              schema:
                type: string
                format: date-time
            Cache-Control:
              description: Cache control directive
              schema:
                type: string
                default: 'private, max-age=3600'
            Content-Disposition:
              description: Attachment download hint (when artifact exists)
              schema:
                type: string
                pattern: '^attachment; filename="export-[A-Z0-9]{8}.json"$'
            X-Export-Artifact-URL:
              description: Signed URL for export artifact (when exists)
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONExport'
        '304':
          description: Not Modified (ETag match)
          headers:
            ETag:
              description: Evidence digest ETag
              schema:
                type: string
            Cache-Control:
              description: Cache control directive
              schema:
                type: string
        '404':
          description: Export not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '405':
          description: Method not allowed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

components:
  schemas:
    VDP_MIN:
      type: object
      required:
        - id
        - title
        - description
        - category
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
          maxLength: 500
        category:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Evidence:
      type: object
      required:
        - id
        - type
        - content
        - confidence
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [text, url, image, video]
        content:
          type: string
        confidence:
          type: number
          minimum: 0
          maximum: 1
        metadata:
          type: object
          properties:
            source:
              type: string
            timestamp:
              type: string
              format: date-time
            tags:
              type: array
              items:
                type: string

    EvidencePack:
      type: object
      required:
        - digestId
        - trustScore
        - evidenceChips
        - synthIdDetected
      properties:
        digestId:
          type: string
        trustScore:
          type: number
          minimum: 0
          maximum: 1
          description: Trust score from 0.0 to 1.0
        evidenceChips:
          type: array
          minItems: 3
          maxItems: 5
          items:
            type: string
          description: Key evidence points (e.g., "5.2M views", "Viral", "Verified on Instagram")
        synthIdDetected:
          type: boolean
        provenance:
          type: string
          format: uri
          description: Original source URL
    
    EvidenceChip:
      type: object
      required:
        - type
        - label
        - value
        - confidence
      properties:
        type:
          type: string
          enum: [engagement, confidence, source, virality]
        label:
          type: string
        value:
          oneOf:
            - type: string
            - type: number
        confidence:
          type: number
          minimum: 0
          maximum: 1

    Textboard:
      type: object
      required:
        - id
        - content
        - duration
        - position
        - style
        - startTime
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
          minLength: 1
          maxLength: 200
        duration:
          type: number
          minimum: 0.5
          maximum: 8
        position:
          type: object
          required:
            - x
            - y
          properties:
            x:
              type: number
              minimum: 0
              maximum: 1
            y:
              type: number
              minimum: 0
              maximum: 1
        style:
          type: object
          required:
            - fontSize
            - fontWeight
            - color
          properties:
            fontSize:
              type: number
              minimum: 12
              maximum: 72
            fontWeight:
              type: string
              enum: [normal, bold, light]
            color:
              type: string
              pattern: '^#[0-9A-F]{6}$'
            backgroundColor:
              type: string
              pattern: '^#[0-9A-F]{6}$'
            opacity:
              type: number
              minimum: 0
              maximum: 1
              default: 1
        startTime:
          type: number
          minimum: 0
          maximum: 8

    Veo3Prompt:
      type: object
      required:
        - prompt
        - duration
        - aspect
        - resolution
      properties:
        prompt:
          type: string
          minLength: 1
          description: Text prompt for Veo3 generation
        duration:
          type: number
          const: 8
          description: Fixed duration of 8 seconds
        aspect:
          type: string
          const: '16:9'
          description: Fixed aspect ratio of 16:9
        resolution:
          type: string
          enum: ['720p', '1080p']
          description: Video resolution quality
        model:
          type: string
          default: 'veo-3'
          description: Model identifier
        parameters:
          type: object
          description: Optional model parameters
          properties:
            temperature:
              type: number
              minimum: 0
              maximum: 1
              default: 0.7
              description: Model temperature
            topP:
              type: number
              minimum: 0
              maximum: 1
              default: 0.9
              description: Top-p sampling parameter
            maxTokens:
              type: number
              minimum: 1
              maximum: 1000
              default: 500
              description: Maximum tokens
        shots:
          type: array
          description: Optional shot descriptions
          items:
            type: object
            properties:
              duration:
                type: number
              description:
                type: string
              camera:
                type: string

    Veo3Job:
      type: object
      required:
        - id
        - status
        - progress
        - prompt
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Job ID
        status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Current job status
        progress:
          type: number
          minimum: 0
          maximum: 100
          description: Job progress percentage
        prompt:
          type: string
          description: Original prompt
        attempts:
          type: integer
          minimum: 0
          description: Number of attempts made
        maxAttempts:
          type: integer
          minimum: 1
          description: Maximum number of attempts allowed
        nextAttemptAt:
          type: string
          format: date-time
          description: Next retry attempt timestamp (for failed jobs in backoff)
        createdAt:
          type: string
          format: date-time
          description: Job creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        startedAt:
          type: string
          format: date-time
          description: Processing start timestamp
        completedAt:
          type: string
          format: date-time
          description: Completion timestamp
        result:
          type: object
          description: Job result (for completed jobs)
          properties:
            videoUrl:
              type: string
              format: uri
              description: Generated preview URL
            duration:
              type: number
              const: 8
              description: Video duration
            aspectRatio:
              type: string
              const: '16:9'
              description: Video aspect ratio
            quality:
              type: string
              enum: [720p, 1080p]
              description: Video quality
            fps:
              type: number
              minimum: 24
              maximum: 60
              description: Frames per second
            bitrate:
              type: number
              minimum: 1000000
              description: Video bitrate
            synthIdDetected:
              type: boolean
              description: Whether SynthID was detected
        error:
          type: object
          description: Error details (for failed jobs)
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Error message
            fix:
              type: string
              description: Suggested fix
            retryAfter:
              type: number
              description: Seconds to wait before retry
        history:
          type: array
          description: Job state transition history
          items:
            type: object
            properties:
              from:
                type: string
                enum: [pending, processing, completed, failed]
              to:
                type: string
                enum: [pending, processing, completed, failed]
              timestamp:
                type: string
                format: date-time
        retryAt:
          type: string
          format: date-time
          description: When job can be retried (for failed jobs)
        estimatedCompletionAt:
          type: string
          format: date-time
          description: Estimated completion time (for processing jobs)

    QAValidationRequest:
      type: object
      required:
        - previewUrl
        - fps
        - bitrate
        - duration
        - aspectRatio
        - quality
        - target
        - hooks
        - safezones
      properties:
        previewUrl:
          type: string
          format: uri
          description: URL of the preview to validate
        fps:
          type: number
          minimum: 1
          maximum: 120
        bitrate:
          type: number
          minimum: 1000
        duration:
          type: number
          const: 8
        aspectRatio:
          type: string
          const: '16:9'
        quality:
          type: string
          enum: ['720p', '1080p']
        target:
          type: string
          enum: ['reels', 'tiktok', 'shorts']
        hooks:
          type: array
          items:
            type: object
            required:
              - name
              - duration
            properties:
              name:
                type: string
              duration:
                type: number
                minimum: 0
                maximum: 3
        safezones:
          type: array
          items:
            type: object
            properties:
              x:
                type: number
              y:
                type: number
              width:
                type: number
              height:
                type: number
        hookSec:
          type: number
          minimum: 0
          maximum: 10
        subtitles:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
              fg:
                type: string
                pattern: '^#[0-9A-Fa-f]{6}$'
              bg:
                type: string
                pattern: '^#[0-9A-Fa-f]{6}$'
              bbox:
                type: array
                items:
                  type: number
                minItems: 4
                maxItems: 4
    
    QAReport:
      type: object
      required:
        - pass
        - score
        - issues
      properties:
        pass:
          type: boolean
        score:
          type: number
          minimum: 0
          maximum: 100
        issues:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              severity:
                type: string
                enum: ['MAJOR', 'WARN']
              message:
                type: string
              field:
                type: string
              code:
                type: string

    BriefExport:
      type: object
      required:
        - digestId
        - title
        - scenes
        - evidence
        - evidencePack
      properties:
        digestId:
          type: string
          pattern: '^[A-Z0-9]{8}$'
        title:
          type: string
        scenes:
          type: array
          items:
            $ref: '#/components/schemas/TextboardScene'
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/Evidence'
        evidencePack:
          $ref: '#/components/schemas/EvidencePack'

    TextboardScene:
      type: object
      required:
        - role
        - durationSec
        - visual
        - audio
      properties:
        role:
          type: string
          enum: [hook, development, climax]
        durationSec:
          type: number
        visual:
          type: string
        audio:
          type: string

    JSONExport:
      type: object
      required:
        - digestId
        - data
        - exportedAt
      properties:
        digestId:
          type: string
          pattern: '^[A-Z0-9]{8}$'
        data:
          type: object
          required:
            - vdp_min
            - evidence
          properties:
            vdp_min:
              $ref: '#/components/schemas/VDP_MIN'
            evidence:
              type: array
              items:
                $ref: '#/components/schemas/Evidence'
            videoGenIR:
              $ref: '#/components/schemas/VideoGenIR'
            veo3Prompt:
              $ref: '#/components/schemas/Veo3Prompt'
            evidencePack:
              $ref: '#/components/schemas/EvidencePack'
        exportedAt:
          type: string
          format: date-time
    
    VideoGenIR:
      type: object
      required:
        - durationSec
        - aspect
        - resolution
        - cuts
      properties:
        durationSec:
          type: number
          const: 8
        aspect:
          type: string
          const: '16:9'
        resolution:
          type: string
          enum: ['720p', '1080p']
        cuts:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: number
              type:
                type: string

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string

    InvalidDurationError:
      type: object
      required:
        - error
        - message
        - fix
      properties:
        error:
          type: string
          const: INVALID_DURATION
        message:
          type: string
        fix:
          type: string

    UnsupportedAspectRatioError:
      type: object
      required:
        - error
        - message
        - fix
      properties:
        error:
          type: string
          const: UNSUPPORTED_AR_FOR_PREVIEW
        message:
          type: string
        fix:
          type: string

    QARuleViolationError:
      type: object
      required:
        - error
        - message
        - violations
        - status
      properties:
        error:
          type: string
          const: QA_RULE_VIOLATION
        message:
          type: string
        violations:
          type: array
          items:
            type: object
            required:
              - rule
              - message
            properties:
              rule:
                type: string
              message:
                type: string
              details:
                type: string
        status:
          type: string
          const: failed

    Problem:
      type: object
      required:
        - type
        - title
        - status
        - code
      properties:
        type:
          type: string
          format: uri
          description: URI reference that identifies the problem type
        title:
          type: string
          description: Short human-readable summary
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence
        instance:
          type: string
          description: URI reference that identifies the specific occurrence
        code:
          type: string
          enum:
            - UNSUPPORTED_AR_FOR_PREVIEW
            - INVALID_DURATION
            - MISSING_FIRST_FRAME
            - PROVIDER_QUOTA_EXCEEDED
            - RATE_LIMITED
            - PROVIDER_POLICY_BLOCKED
            - EMBED_DENIED
            - QA_RULE_VIOLATION
            - VALIDATION_ERROR
            - BAD_REQUEST
            - RESOURCE_NOT_FOUND
            - NOT_FOUND
            - UNAUTHORIZED
            - FORBIDDEN
            - METHOD_NOT_ALLOWED
            - INTERNAL_SERVER_ERROR
            - CONFLICT
            - TIMEOUT
            - SERVICE_UNAVAILABLE
            - INTERNAL_ERROR
          description: Application-specific error code
        fix:
          type: string
          description: Suggested fix for the problem
        retryAfter:
          type: integer
          minimum: 1
          description: Seconds to wait before retrying
        violations:
          type: array
          description: Validation violations
          items:
            type: object
            required:
              - field
              - message
            properties:
              field:
                type: string
                description: Field path that failed validation
              message:
                type: string
                description: Description of the validation failure
              code:
                type: string
                description: Validation error code
        timestamp:
          type: string
          format: date-time
          description: When the problem occurred
        traceId:
          type: string
          description: Unique identifier for request tracing

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []











